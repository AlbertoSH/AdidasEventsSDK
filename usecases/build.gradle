apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.ltgt.apt'
apply plugin: 'me.tatarka.retrolambda'

retrolambda {
    jdk project.property('java7home')
    oldJdk project.property('java7home')
    javaVersion JavaVersion.VERSION_1_7
}

targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = JavaVersion.VERSION_1_8


repositories {
    mavenCentral()
    jcenter()
}

jar {

    from {
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }

        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile "com.tngtech.jgiven:jgiven-html5-report:0.11.4"
    testCompile "com.tngtech.jgiven:jgiven-junit:0.11.4"
    testCompile "org.mockito:mockito-core:2.0.44-beta"

    compile 'com.google.code.findbugs:findbugs:3.0.1'

    compileOnly 'javax.annotation:jsr250-api:1.0'
    apt 'com.google.dagger:dagger-compiler:2.7'
    compile 'com.google.dagger:dagger:2.7'

    compile 'com.fernandocejas:arrow:1.0.0'
    compile 'joda-time:joda-time:2.9.4'
    compile 'net.sourceforge.streamsupport:streamsupport:1.5.1'

    compile 'io.reactivex:rxjava:1.2.1'
}


apply plugin: 'maven-publish'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allJava
}

dependencies {
    compile project(':api')
    compile project(':repositories')
    compile project(':usermanagement')
}